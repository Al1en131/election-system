generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ===================== Users =====================
model User {
  id           String   @id @default(uuid())
  nim          String   @unique
  name         String
  program      String?
  email        String?  @unique
  passwordHash String?
  role         String   @default("student") // enum('student','admin')
  createdAt    DateTime @default(now())

  votes        Vote[]

  @@map("Users") // mapping ke tabel asli
}

// ===================== Organizations =====================
model Organization {
  id          String     @id @default(uuid())
  name        String
  description String?
  logo        String?
  createdAt   DateTime   @default(now())

  elections   Election[]
  candidates Candidate[]

  @@map("organizations")
}

// ===================== Elections =====================
model Election {
  id          String       @id @default(uuid())
  title       String
  description String?
  orgId       String
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime     @default(now())
  publicKeyB64 String?

  organization Organization @relation(fields: [orgId], references: [id])
  candidates   Candidate[]
  votes        Vote[]

  @@index([orgId])
  @@map("elections")
}

// ===================== Candidates =====================
model Candidate {
  id                String   @id @default(uuid()) @db.Char(36)
  chairmanName      String   @db.VarChar(100)
  viceChairmanName  String   @db.VarChar(100)
  orgId             String?  @db.Char(36)
  electionId        String   @db.Char(36)

  photoChairMan     String?  @db.VarChar(255)
  photoViceChairMan String   @db.VarChar(255)
  visionMission     String?  @db.Text
  createdAt         DateTime @default(now())

  // relasi
  election          Election     @relation(fields: [electionId], references: [id])
  organization      Organization? @relation(fields: [orgId], references: [id])
  votes             Vote[]

  @@map("candidates")
}

// ===================== Votes =====================
model Vote {
  id           String   @id @default(uuid())
  electionId   String
  candidateId  String
  userId       String
  createdAt    DateTime @default(now())
  encryptedVote String?

  election    Election  @relation(fields: [electionId], references: [id])
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  user        User      @relation(fields: [userId], references: [id])

  @@unique([electionId, userId]) // 1 user hanya boleh vote 1x per election
  @@map("votes")
}
